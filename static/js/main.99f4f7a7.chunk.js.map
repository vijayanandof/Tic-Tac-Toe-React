{"version":3,"sources":["components/Square.js","utils/checkWinner.js","components/ShowWinner.js","components/MasterForm.js","utils/computerPlayer.js","components/Game.js","App.js","reportWebVitals.js","index.js"],"names":["Square","props","className","onClick","index","state","winCombos","ShowWinner","Modal","show","onHide","backdrop","keyboard","Header","closeButton","Title","title","Body","body","MasterForm","handleChange","event","target","name","value","setState","player0","handleSubmit","preventDefault","playMode","playerX","handleCloseForm","sessionStorage","setItem","_next","currentStep","_prev","formState","this","type","onSubmit","Step1","Step2","previousButton","nextButton","React","Component","htmlFor","onChange","id","defaultValue","placeholder","required","aiPlayer","checkWin","board","player","plays","reduce","a","e","i","concat","gameWon","entries","every","elem","indexOf","minimax","newBoard","availSpots","filter","s","emptySquares","score","length","bestMove","moves","move","result","push","bestScore","initialState","Array","from","keys","winner","Game","useState","gameState","updateGameState","isXChance","updateIsXChance","showWinnerModal","setShowWinnerModalState","onSquareClicked","strings","console","log","getCurrentChance","clearGame","useEffect","debug","b","c","checkForDraw","checkWinner","getItem","clear","window","location","reload","Button","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.99f4f7a7.chunk.js","sourcesContent":["function Square(props) {\r\n  return (\r\n    <div className=\"squarebox\" onClick={() => props.onClick(props.index)}>\r\n      { typeof props.state === 'number' ? \"\" : props.state}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Square;\r\n","export const winCombos = [\r\n    [0, 1, 2], // rows\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6], // columns\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8], // diagnols\r\n    [2, 4, 6],\r\n  ];\r\n\r\nexport function checkWinner(gameState) {\r\n  console.debug(\"checkWinner: \", gameState[0], gameState[1], gameState[2]);\r\n  for (let i = 0; i < winCombos.length; i++) {\r\n    const [a, b, c] = winCombos[i];\r\n    if (\r\n      gameState[a] &&\r\n      gameState[a] === gameState[b] &&\r\n      gameState[a] === gameState[c]\r\n    ) {\r\n      return gameState[a];\r\n    }\r\n  }\r\n\r\n  return checkForDraw(gameState) ? \"Draw\" : null;\r\n}\r\n\r\nfunction checkForDraw(gameState) {\r\n  if (gameState.filter(s => typeof s === 'string').length === 9) {\r\n    return true;\r\n  }\r\n}\r\n","import { Modal } from \"react-bootstrap\";\r\n\r\nfunction ShowWinner(props) {\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={props.show}\r\n        onHide={() => {\r\n          props.onHide();\r\n        }}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{props.title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>{props.body}</Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ShowWinner;\r\n","import React from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\n\r\n/**\r\n * Multi-step form for getting 2 inputs\r\n * 1. Game Mode \r\n * 2. Player Names\r\n *\r\n * @export\r\n * @class MasterForm\r\n * @extends {React.Component}\r\n * @returns <MasterForm/>\r\n */\r\nexport class MasterForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentStep: 1,\r\n      playMode: \"1\",\r\n      playerX: \"\",\r\n      player0: \"\",\r\n      formState: true,\r\n    };\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n\r\n    // Vs Computer state\r\n    if(name === 'playMode' && value ===\"2\"){\r\n      this.setState({\r\n        player0: \"Computer\",\r\n      });\r\n    }\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { playMode, playerX, player0 } = this.state;\r\n    this.handleCloseForm();\r\n    sessionStorage.setItem(\"playMode\", playMode);\r\n    sessionStorage.setItem(\"playerX\", playerX);\r\n    sessionStorage.setItem(\"player0\", player0);\r\n  };\r\n\r\n  _next = () => {\r\n    let currentStep = this.state.currentStep;\r\n    currentStep = currentStep >= 2 ? 3 : currentStep + 1;\r\n    this.setState({\r\n      currentStep: currentStep,\r\n    });\r\n  };\r\n\r\n  _prev = () => {\r\n    let currentStep = this.state.currentStep;\r\n    currentStep = currentStep <= 1 ? 1 : currentStep - 1;\r\n    this.setState({\r\n      currentStep: currentStep,\r\n    });\r\n  };\r\n\r\n  previousButton() {\r\n    let currentStep = this.state.currentStep;\r\n    if (currentStep !== 1) {\r\n      return (\r\n        <button\r\n          className=\"btn btn-secondary spacing-left\"\r\n          type=\"button\"\r\n          onClick={this._prev}\r\n        >\r\n          Previous\r\n        </button>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n\r\n  nextButton() {\r\n    let currentStep = this.state.currentStep;\r\n    if (currentStep < 2) {\r\n      return (\r\n        <button className=\"btn btn-primary\" type=\"button\" onClick={this._next}>\r\n          Next\r\n        </button>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n\r\n  handleCloseForm = () => {\r\n    this.setState({\r\n      formState: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Modal\r\n          show={this.state.formState}\r\n          onHide={this.handleCloseForm}\r\n          backdrop=\"static\"\r\n          keyboard={false}\r\n        >\r\n          <Modal.Header>\r\n            <Modal.Title>Let's play a Tic-Tac-Toe Game.</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <b>Step {this.state.currentStep} of 2: </b>\r\n            <br></br>\r\n            <br></br>\r\n            <form onSubmit={this.handleSubmit}>\r\n              <Step1\r\n                currentStep={this.state.currentStep}\r\n                handleChange={this.handleChange}\r\n                playMode={this.state.playMode}\r\n              />\r\n              <Step2\r\n                currentStep={this.state.currentStep}\r\n                playMode={this.state.playMode}\r\n                handleChange={this.handleChange}\r\n                playerX={this.state.playerX}\r\n              />\r\n              {this.previousButton()}\r\n              {this.nextButton()}\r\n            </form>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction Step1(props) {\r\n  if (props.currentStep !== 1) {\r\n    return null;\r\n  }\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor=\"playMode\">Choose a Game Mode: </label>\r\n      <select\r\n        className=\"form-select\"\r\n        aria-label=\"Choose a game mode:\"\r\n        onChange={props.handleChange}\r\n        value={props.playMode}\r\n        id=\"playMode\"\r\n        name=\"playMode\"\r\n      >\r\n        <option defaultValue value=\"1\">\r\n          2 Players (Default)\r\n        </option>\r\n        <option value=\"2\">Vs Computer</option>\r\n      </select>\r\n      <br></br>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Step2(props) {\r\n  if (props.currentStep !== 2) {\r\n    return null;\r\n  }\r\n  if (props.playMode === \"2\") {\r\n    return (\r\n      <>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"playerX\">Enter name of Player 1(X):</label>\r\n          <input\r\n            className=\"form-control\"\r\n            id=\"playerX\"\r\n            name=\"playerX\"\r\n            type=\"text\"\r\n            placeholder=\"(X)\"\r\n            value={props.playerX}\r\n            onChange={props.handleChange}\r\n            required\r\n          />\r\n          <br></br>\r\n        </div>\r\n        <button className=\"btn btn-success btn-block float-right\">\r\n          Start Game!\r\n        </button>\r\n      </>\r\n    );\r\n  } else if (props.playMode === \"1\") {\r\n    return (\r\n      <>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"playerX\">Enter name of Player 1(X):</label>\r\n          <input\r\n            className=\"form-control\"\r\n            id=\"playerX\"\r\n            name=\"playerX\"\r\n            type=\"text\"\r\n            placeholder=\"(X)\"\r\n            value={props.playerX}\r\n            onChange={props.handleChange}\r\n            required\r\n          />\r\n          <label htmlFor=\"player0\">Enter name of Player 2(0):</label>\r\n          <input\r\n            className=\"form-control\"\r\n            id=\"player0\"\r\n            name=\"player0\"\r\n            type=\"text\"\r\n            placeholder=\"(0)\"\r\n            value={props.player0}\r\n            onChange={props.handleChange}\r\n            required\r\n          />\r\n          <br></br>\r\n        </div>\r\n        <button className=\"btn btn-success btn-block float-right\">\r\n          Start Game!\r\n        </button>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import { winCombos } from \"./checkWinner\";\n\nconst humanPlayer = \"X\";\nconst aiPlayer = \"0\";\n\nfunction checkWin(board, player) {\n  let plays = board.reduce((a, e, i) => (e === player ? a.concat(i) : a), []);\n  let gameWon = null;\n  for (let [index, win] of winCombos.entries()) {\n    if (win.every((elem) => plays.indexOf(elem) > -1)) {\n      gameWon = { index: index, player: player };\n      break;\n    }\n  }\n  return gameWon;\n}\n\nfunction emptySquares(newBoard) {\n  return newBoard.filter((s) => typeof s == \"number\");\n}\n\nexport function minimax(newBoard, player) {\n  var availSpots = emptySquares(newBoard);\n\n  if (checkWin(newBoard, humanPlayer)) {\n    return { score: -10 };\n  } else if (checkWin(newBoard, aiPlayer)) {\n    return { score: 10 };\n  } else if (availSpots.length === 0) {\n    return { score: 0 };\n  }\n  var moves = [];\n  for (var i = 0; i < availSpots.length; i++) {\n    var move = {};\n    move.index = newBoard[availSpots[i]];\n    newBoard[availSpots[i]] = player;\n\n    if (player === aiPlayer) {\n      let result = minimax(newBoard, humanPlayer);\n      move.score = result.score;\n    } else {\n      let result = minimax(newBoard, aiPlayer);\n      move.score = result.score;\n    }\n\n    newBoard[availSpots[i]] = move.index;\n\n    moves.push(move);\n  }\n\n  var bestMove;\n  if (player === aiPlayer) {\n    let bestScore = -10000;\n    for (let i = 0; i < moves.length; i++) {\n      if (moves[i].score > bestScore) {\n        bestScore = moves[i].score;\n        bestMove = i;\n      }\n    }\n  } else {\n    let bestScore = 10000;\n    for (let i = 0; i < moves.length; i++) {\n      if (moves[i].score < bestScore) {\n        bestScore = moves[i].score;\n        bestMove = i;\n      }\n    }\n  }\n\n  return moves[bestMove];\n}\n","import { useEffect, useState } from \"react\";\r\nimport Square from \"./Square\";\r\nimport { checkWinner } from \"../utils/checkWinner\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport ShowWinner from \"./ShowWinner\";\r\nimport { MasterForm } from \"./MasterForm\";\r\nimport { minimax } from \"../utils/computerPlayer\";\r\n\r\n/* Inital Game states */\r\nconst initialState = Array.from(Array(9).keys());\r\nlet winner = \"\";\r\n\r\n/**\r\n * Game Component holds\r\n * Board, Square, Masterform, ShowWinner comps\r\n * and does state handling.\r\n *\r\n * @returns <Game/>\r\n */\r\nfunction Game() {\r\n  const [gameState, updateGameState] = useState(initialState);\r\n  const [isXChance, updateIsXChance] = useState(true);\r\n  const [showWinnerModal, setShowWinnerModalState] = useState(false);\r\n\r\n  /**\r\n   *  Modal and state handling.\r\n   */\r\n  const handleWinnerModalClose = () => {\r\n    setShowWinnerModalState(false);\r\n    clearGame();\r\n    sessionStorage.clear();\r\n    window.location.reload();\r\n  };\r\n\r\n  const handleWinnerModalShow = () => {\r\n    setShowWinnerModalState(true);\r\n  };\r\n\r\n  function onSquareClicked(index) {\r\n    let strings = Array.from(gameState);\r\n    console.log(strings);\r\n    if (typeof strings[index] !== \"number\") return;\r\n    strings[index] = getCurrentChance(isXChance);\r\n    updateIsXChance(!isXChance);\r\n    updateGameState(strings);\r\n  }\r\n\r\n  const clearGame = () => {\r\n    updateIsXChance(true);\r\n    updateGameState(initialState);\r\n  };\r\n\r\n  function getTitleForModal() {\r\n    if (winner === \"Draw\") {\r\n      return \"Game Draw.\";\r\n    } else {\r\n      return (\r\n        \"Woohoo!! \" +\r\n        (winner === \"X\"\r\n          ? \"Player1 (X) - \" + sessionStorage.getItem(\"playerX\") + \" Won.\"\r\n          : \"Player2 (0) - \" + sessionStorage.getItem(\"player0\") + \" Won.\")\r\n      );\r\n    }\r\n  }\r\n\r\n  function getCurrentChance(isXChance) {\r\n    return isXChance ? \"X\" : \"0\";\r\n  }\r\n\r\n  // Hook for gameState change\r\n  useEffect(() => {\r\n    winner = checkWinner(gameState);\r\n    if (winner) {\r\n      handleWinnerModalShow();\r\n    }\r\n  }, [gameState]);\r\n\r\n  // Hook for isXChance change\r\n  useEffect(() => {\r\n    if (!isXChance && sessionStorage.getItem(\"player0\") === \"Computer\") {\r\n      // console.log(minimax(gameState, \"0\"));\r\n      console.log(gameState, 0);\r\n      let strings = Array.from(gameState);\r\n      strings[minimax(gameState, \"0\").index] = getCurrentChance(isXChance);\r\n      updateGameState(strings);\r\n      updateIsXChance(!isXChance);\r\n    }\r\n  }, [isXChance, gameState]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"App\">\r\n        <h1 className=\"header\">Tic Tac Toe</h1>\r\n        <br></br>\r\n        <MasterForm />\r\n        <div className=\"game-container\">\r\n          <Square\r\n            onClick={() => onSquareClicked(0)}\r\n            state={gameState[0]}\r\n          ></Square>\r\n          <Square\r\n            onClick={() => onSquareClicked(1)}\r\n            state={gameState[1]}\r\n          ></Square>\r\n          <Square\r\n            onClick={() => onSquareClicked(2)}\r\n            state={gameState[2]}\r\n          ></Square>\r\n          <Square\r\n            onClick={() => onSquareClicked(3)}\r\n            state={gameState[3]}\r\n          ></Square>\r\n          <Square\r\n            onClick={() => onSquareClicked(4)}\r\n            state={gameState[4]}\r\n          ></Square>\r\n          <Square\r\n            onClick={() => onSquareClicked(5)}\r\n            state={gameState[5]}\r\n          ></Square>\r\n          <Square\r\n            onClick={() => onSquareClicked(6)}\r\n            state={gameState[6]}\r\n          ></Square>\r\n          <Square\r\n            onClick={() => onSquareClicked(7)}\r\n            state={gameState[7]}\r\n          ></Square>\r\n          <Square\r\n            onClick={() => onSquareClicked(8)}\r\n            state={gameState[8]}\r\n          ></Square>\r\n        </div>\r\n        <br></br>\r\n        <h3 className=\"player\">\r\n          Player :{getCurrentChance(isXChance)}\r\n          's turn now.\r\n        </h3>\r\n        <ShowWinner\r\n          show={showWinnerModal}\r\n          onHide={handleWinnerModalClose}\r\n          title={getTitleForModal()}\r\n          body={getWinnerModalBody()}\r\n        ></ShowWinner>\r\n        <br></br>\r\n        <Button onClick={() => clearGame()}>Clear grid</Button>\r\n      </div>\r\n    </>\r\n  );\r\n\r\n  function getWinnerModalBody() {\r\n    if (winner === \"Draw\") {\r\n      return \"Close to try again.\";\r\n    } else {\r\n      return (\r\n        (winner === \"X\"\r\n          ? \"Player2(Y) \" + sessionStorage.getItem(\"player0\")\r\n          : \"Player1(X) \" + sessionStorage.getItem(\"playerX\")) +\r\n        \". Better luck next time.\"\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default Game;\r\n","import \"./App.css\";\nimport Game from \"./components/Game\";\n\nfunction App() {\n  return <Game />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}